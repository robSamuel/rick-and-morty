{"version":3,"sources":["webpack:///./src/pages/characters.jsx"],"names":["Characters","useState","featuredCharacters","setFeaturedCharacters","useEffect","ids","index","push","Math","floor","process","random","fetchFeaturedCharacters","fetchData","pageNumber","a","retrieveCharacters","data","retrieveMultipleCharacters","results","status","isNotEmptyArray","title","className","map","character","key","id","image","link","name","retrieveData"],"mappings":"oOA+EeA,UApEI,WAAO,IAAD,EAC+BC,mBAAS,IAAtDC,EADc,KACMC,EADN,KAGrBC,qBAAU,WAGN,IAFA,IAAMC,EAAM,GAEHC,EAAQ,EAAGA,EAAQ,EAAGA,IAC3BD,EAAIE,KAAKC,KAAKC,MAAsBC,MAAhBF,KAAKG,WAG7BC,EAAwBP,KACzB,IAEH,IAAMQ,EAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACKC,YAAmBF,GADxB,cACRG,EADQ,yBAGPA,GAHO,2CAAH,sDAMTL,EAAuB,uCAAG,WAAOP,GAAP,iBAAAU,EAAA,sEACMG,YAA2Bb,GADjC,mBACpBc,EADoB,EACpBA,QAEM,MAHc,EACXC,QAEKC,YAAgBF,GAHV,iDAM5BhB,EAAsBgB,GANM,2CAAH,sDA0B7B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKG,MAAM,oBACX,6BAASC,UAAU,cACf,yBAAKA,UAAU,sCACX,0BAAMA,UAAU,4BAAhB,wBAGA,yBAAKA,UAAU,2BAxBvBF,YAAgBnB,GAGbA,EAAmBsB,KAAI,SAAAC,GAC1B,OACI,kBAAC,IAAD,CACIC,IAAG,aAAeD,EAAUE,GAC5BA,GAAIF,EAAUE,GACdC,MAAOH,EAAUG,MACjBC,KAAK,YACLP,MAAOG,EAAUK,UATlB,kBAAC,WAAD,QA2BH,yBAAKP,UAAU,mCACX,kBAAC,IAAD,CACIM,KAAK,YACLE,aAAclB","file":"component---src-pages-characters-jsx-bb4fed0222dc15279a57.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    retrieveCharacters,\n    retrieveMultipleCharacters\n} from '../services/characters';\nimport { isNotEmptyArray } from '../utils';\nimport Card from '../components/Card';\nimport Layout from '../components/Layout';\nimport List from '../components/List';\nimport SEO from '../components/seo';\n\nconst Characters = () => {\n    const [featuredCharacters, setFeaturedCharacters] = useState([]);\n\n    useEffect(() => {\n        const ids = [];\n\n        for (let index = 0; index < 4; index++) {\n            ids.push(Math.floor(Math.random() * process.env.GATSBY_MAX_CHARACTERS_LENGTH));\n        }\n\n        fetchFeaturedCharacters(ids);\n    }, []);\n\n    const fetchData = async (pageNumber) => {\n        const data = await retrieveCharacters(pageNumber);\n\n        return data;\n    };\n\n    const fetchFeaturedCharacters = async (ids) => {\n        const { results, status } = await retrieveMultipleCharacters(ids);\n\n        if(status !== 200 && !isNotEmptyArray(results))\n            return;\n\n        setFeaturedCharacters(results);\n    };\n\n    const renderFeaturedCharacters = () => {\n        if(!isNotEmptyArray(featuredCharacters))\n            return <Fragment />;\n\n        return featuredCharacters.map(character => {\n            return (\n                <Card\n                    key={`character-${character.id}`}\n                    id={character.id}\n                    image={character.image}\n                    link=\"character\"\n                    title={character.name}\n                />\n            );\n        });\n    };\n\n    return (\n        <Layout>\n            <SEO title=\"Characters List\" />\n            <section className=\"Characters\">\n                <div className=\"container-fluid FeaturedCharacters\">\n                    <span className=\"FeaturedCharacters-title\">\n                        Featured Characters:\n                    </span>\n                    <div className=\"FeaturedCharacters-list\">\n                        {renderFeaturedCharacters()}\n                    </div>\n                </div>\n                <div className=\"container-fluid Characters-list\">\n                    <List\n                        link=\"character\"\n                        retrieveData={fetchData}\n                    />\n                </div>\n            </section>\n        </Layout>\n    );\n};\n\nexport default Characters;\n"],"sourceRoot":""}